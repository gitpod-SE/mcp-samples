services:
  puppeteer:
    name: "MCP Puppeteer Server"
    description: "Puppeteer MCP server for browser automation (Docker container)"
    triggeredBy:
      - manual  # You can also add 'postEnvironmentStart' if you want it to auto-start
    commands:
      start: |
        echo "Checking if Puppeteer MCP server is already running..."
        if docker ps --filter "ancestor=mcp/puppeteer" --format '{{.ID}}' | grep -q .; then
          echo "Puppeteer MCP server already running. Nothing to do."
        else
          echo "Restart the puppeteer MCP server from the MCP Servers Cline extension panel" 
        fi

        # Keep the service alive with a dummy long-running command
        echo "Keeping service alive..."
        tail -f /dev/null


      ready: |
        if docker ps --filter "ancestor=mcp/puppeteer" --format '{{.ID}}' | grep -q .; then
          echo "Puppeteer MCP server is running"
          exit 0
        else
          echo "Puppeteer MCP server is not running"
          echo "⚠️  Please restart the server from the MCP Servers Cline extension panel ⚠️"
          exit 1
        fi

      stop: |
        echo "Stopping any running Puppeteer MCP containers..."
        docker ps --filter "ancestor=mcp/puppeteer" -q | xargs -r docker stop
